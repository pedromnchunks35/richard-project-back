// Code generated by MockGen. DO NOT EDIT.
// Source: hello_world_repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHelloWorldRepository is a mock of HelloWorldRepository interface.
type MockHelloWorldRepository struct {
	ctrl     *gomock.Controller
	recorder *MockHelloWorldRepositoryMockRecorder
}

// MockHelloWorldRepositoryMockRecorder is the mock recorder for MockHelloWorldRepository.
type MockHelloWorldRepositoryMockRecorder struct {
	mock *MockHelloWorldRepository
}

// NewMockHelloWorldRepository creates a new mock instance.
func NewMockHelloWorldRepository(ctrl *gomock.Controller) *MockHelloWorldRepository {
	mock := &MockHelloWorldRepository{ctrl: ctrl}
	mock.recorder = &MockHelloWorldRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHelloWorldRepository) EXPECT() *MockHelloWorldRepositoryMockRecorder {
	return m.recorder
}

// GetHelloWorld mocks base method.
func (m *MockHelloWorldRepository) GetHelloWorld() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHelloWorld")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetHelloWorld indicates an expected call of GetHelloWorld.
func (mr *MockHelloWorldRepositoryMockRecorder) GetHelloWorld() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHelloWorld", reflect.TypeOf((*MockHelloWorldRepository)(nil).GetHelloWorld))
}
